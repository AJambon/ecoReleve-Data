/****** If @NARC replace ECWP-eReleveData by NARC_eReleveData  ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF OBJECT_ID('tempdb..#indiv_criteria ') IS NOT NULL
	DROP TABLE #indiv_criteria 

declare @subProtocole table (Identification_criteria varchar(500), Id_nonIdentified int identity(1,1))


IF OBJECT_ID('tempdb..#indiv_criteria ') IS NOT NULL
	DROP TABLE #indiv_criteria 

CREATE table #indiv_criteria 
(Id_nonIdentified int,propName varchar(250), value varchar(250),fullpath varchar(250));

IF OBJECT_ID('tempdb..#proto_Id_nonIdentified ') IS NOT NULL
	DROP TABLE #proto_Id_nonIdentified 

CREATE table #proto_Id_nonIdentified
(Id_nonIdentified int, proto_ID int, protocoleType int);


------ Insert criteria from Capture individual

INSERT INTO @subProtocole (Identification_criteria)
select DISTINCT prot.Identification_criteria
FROM Observation o 
JOIN [ECWP-eReleveData].dbo.TProtocol_Capture_Individual prot ON o.original_id = CONVERT(VARCHAR,prot.PK)
--LEFT JOIN nonIDind_criteria c ON prot.Identification_criteria = c.Identification_criteria 
WHERE o.FK_ProtocoleType = (SELECT ID FROM ProtocoleType WHERE name = 'Capture individual')
and prot.FK_TInd_ID is null and prot.Identification_criteria is not null and prot.Identification_criteria like '%Chip%'
--AND c.IndID is null ;

INSERT INTO #proto_Id_nonIdentified (proto_ID,Id_nonIdentified,protocoleType)
SELECT p.PK,s.Id_nonIdentified, (SELECT ID FROM ProtocoleType WHERE name = 'Capture individual')
FROM [ECWP-eReleveData].[dbo].TProtocol_Capture_Individual p
JOIN @subProtocole s ON p.Identification_criteria = s.Identification_criteria;


------ Insert criteria from Bird Biometry

INSERT INTO @subProtocole (Identification_criteria)
select DISTINCT prot.Identification_criteria
FROM Observation o 
JOIN [ECWP-eReleveData].dbo.TProtocol_Bird_Biometry prot ON o.original_id = CONVERT(VARCHAR,prot.PK)
--LEFT JOIN nonIDind_criteria c ON prot.Identification_criteria = c.Identification_criteria 
WHERE o.FK_ProtocoleType = (SELECT ID FROM ProtocoleType WHERE name = 'Bird Biometry')
and prot.FK_TInd_ID is null and prot.Identification_criteria is not null and prot.Identification_criteria like '%Chip%'
---AND c.IndID is null ;

INSERT INTO #proto_Id_nonIdentified (proto_ID,Id_nonIdentified,protocoleType)
SELECT p.PK,s.Id_nonIdentified, (SELECT ID FROM ProtocoleType WHERE name = 'Bird Biometry')
FROM [ECWP-eReleveData].[dbo].TProtocol_Bird_Biometry p
JOIN @subProtocole s ON p.Identification_criteria = s.Identification_criteria;


------ Insert criteria from BVertebrate individual Death

INSERT INTO @subProtocole (Identification_criteria)
select DISTINCT prot.Identification_criteria
FROM Observation o 
JOIN [ECWP-eReleveData].dbo.TProtocol_Vertebrate_Individual_Death prot ON o.original_id = CONVERT(VARCHAR,prot.PK)
--LEFT JOIN nonIDind_criteria c ON prot.Identification_criteria = c.Identification_criteria 
WHERE o.FK_ProtocoleType = (SELECT ID FROM ProtocoleType WHERE name = 'Vertebrate individual Death')
and prot.FK_TInd_ID is null and prot.Identification_criteria is not null and prot.Identification_criteria like '%Chip%'
---AND c.IndID is null ;

INSERT INTO #proto_Id_nonIdentified (proto_ID,Id_nonIdentified,protocoleType)
SELECT p.PK,s.Id_nonIdentified, (SELECT ID FROM ProtocoleType WHERE name = 'Vertebrate individual Death')
FROM [ECWP-eReleveData].[dbo].TProtocol_Vertebrate_Individual_Death p
JOIN @subProtocole s ON p.Identification_criteria = s.Identification_criteria;


------ Insert criteria from Nest Description

INSERT INTO @subProtocole (Identification_criteria)
select DISTINCT prot.Identification_criteria
FROM Observation o 
JOIN [ECWP-eReleveData].dbo.TProtocol_Nest_Description prot ON o.original_id = CONVERT(VARCHAR,prot.PK)
--LEFT JOIN nonIDind_criteria c ON prot.Identification_criteria = c.Identification_criteria 
WHERE o.FK_ProtocoleType = (SELECT ID FROM ProtocoleType WHERE name = 'Nest Description')
and prot.FK_TInd_ID is null and prot.Identification_criteria is not null and prot.Identification_criteria like '%Chip%'
---AND c.IndID is null ;

INSERT INTO #proto_Id_nonIdentified (proto_ID,Id_nonIdentified,protocoleType)
SELECT p.PK,s.Id_nonIdentified, (SELECT ID FROM ProtocoleType WHERE name = 'Nest Description')
FROM [ECWP-eReleveData].[dbo].TProtocol_Nest_Description p
JOIN @subProtocole s ON p.Identification_criteria = s.Identification_criteria;




WITH splitCriteria as (
  SELECT Id_nonIdentified,
     Split.a.value('.', 'VARCHAR(100)') AS singleCriteria  
 FROM  
 (
     SELECT Id_nonIdentified, 
         CAST ('<M>' + REPLACE([Identification_criteria], ';', '</M><M>') + '</M>' AS XML) AS Data  
     FROM  @subProtocole
 ) AS A CROSS APPLY Data.nodes ('/M') AS Split(a))


 INSERT INTO #indiv_criteria (Id_nonIdentified,propName, value)
 SELECT Id_nonIdentified,dbo.split(singleCriteria,',',1) as propName,dbo.split(singleCriteria,',',2) AS value 
 FROM splitCriteria;

delete  #indiv_criteria
 where propName not like '%chip%'

 ----- Update propName : remove id**@ and [] -----
 
 UPDATE ic SET propName= dbo.split(dbo.split(propName,'@',2),']',1)
 FROM #indiv_criteria ic;


 select * 
 from Observation o 
 JOIN #proto_Id_nonIdentified p on p.protocoleType = o.FK_ProtocoleType and CONVERT(varchar(10),p.proto_ID) = o.original_id
 JOIN Individual i on o.FK_Individual = i.ID and i.FK_IndividualType = 2;

 /****** check if non id ref exists if we add property chipcode *****/ 

  IF OBJECT_ID('tempdb..#nonID_indToduplicate') IS NOT NULL
	DROP TABLE #nonID_indToduplicate ;

	
  IF OBJECT_ID('tempdb..#indTomodif') IS NOT NULL
	DROP TABLE #indTomodif ;

 select distinct 
		ni.[Species]
      ,ni.[Age]
      ,ni.[Mark_Color_1]
      ,ni.[Mark_Position_1]
      ,ni.[Mark_Color_2]
      ,ni.[Mark_Position_2]
      ,ni.[Sex]
      ,ni.[Transmitter_Shape]
      ,ni.[Transmitter_Model]
      ,ni.[Transmitter_Compagny]
      ,ni.[Transmitter_Type]
      ,ni.[Ring_position_1]
      ,ni.[Ring_position_2]
      ,ni.[Ring_color_1]
      ,ni.[Ring_color_2]
	  ,ic.value as [MicroChip]
	  ,o.ID as obsID
	  ,i.ID as indID
	  ,ni.creationDate
INTO #indTomodif
 FROM EcoReleve_Export_ECWP.dbo.TIndividu_Non_Identified ni
 JOIN Individual i on i.ID = ni.ID
 JOIN Observation o on o.FK_Individual = i.ID
 JOIN #proto_Id_nonIdentified p on p.protocoleType = o.FK_ProtocoleType and CONVERT(varchar(10),p.proto_ID) = o.original_id 
 JOIN #indiv_criteria ic on ic.Id_nonIdentified = p.Id_nonIdentified
 

 select t1.*
 INTO #nonID_indToduplicate 
  FROM EcoReleve_Export_ECWP.dbo.TIndividu_Non_Identified t1
  JOIN #indTomodif itm 
		ON ISNULL(itm.[Species],'') = ISNULL(t1.[Species],'')
		  AND ISNULL(itm.[Age],'') = ISNULL(t1.[Age],'')
		  AND ISNULL(itm.[Mark_Color_1],'') = ISNULL(t1.[Mark_Color_1],'')
		  AND ISNULL(itm.[Mark_Position_1],'') = ISNULL(t1.[Mark_Position_1],'')
		  AND ISNULL(itm.[Mark_Color_2],'') = ISNULL(t1.[Mark_Color_2],'')
		  AND ISNULL(itm.[Mark_Position_2],'') = ISNULL(t1.[Mark_Position_2],'')
		  AND ISNULL(itm.[Sex],'') = ISNULL(t1.[Sex],'')
		  AND ISNULL(itm.[Transmitter_Shape],'') = ISNULL(t1.[Transmitter_Shape],'')
		  AND ISNULL(itm.[Transmitter_Model],'') = ISNULL(t1.[Transmitter_Model],'')
		  AND ISNULL(itm.[Microchip],'') = ISNULL(t1.[Microchip],'')
		  AND ISNULL(itm.[Transmitter_Compagny],'') = ISNULL(t1.[Transmitter_Compagny],'')
		  AND ISNULL(itm.[Transmitter_Type],'') = ISNULL(t1.[Transmitter_Type],'')
		  AND ISNULL(itm.[Ring_position_1],'') = ISNULL(t1.[Ring_position_1],'')
		  AND ISNULL(itm.[Ring_position_2],'') = ISNULL(t1.[Ring_position_2],'')
		  AND ISNULL(itm.[Ring_color_1],'') = ISNULL(t1.[Ring_color_1],'')
		  AND ISNULL(itm.[Ring_color_2],'') = ISNULL(t1.[Ring_color_2],'')
  where t1.Microchip is not null


  IF (SELECT COUNT(*) FROM #nonID_indToduplicate) > 0
	  BEGIN 
	  print 'create new indiv with this microChip and update observation with new ones';


	  END
  ELSE 
	  BEGIN
		print 'just update the microCHIP ';

		DECLARE @idMiChip int SET @idMiChip = (SELECT ID FROM IndividualDynProp WHERE Name = 'MicroChip')

		INSERT INTO IndividualDynPropValue (StartDate,ValueString,FK_Individual,FK_IndividualDynProp)
		SELECT distinct creationDate,MicroChip,indID,@idMiChip
		FROM #indTomodif

	  END

GO



INSERT INTO [dbo].[TVersion] (TVer_FileName,TVer_Date,TVer_DbName) VALUES ('74_nonID_Indiv_exctract&insert_Microchip_from_eReleve',GETDATE(),(SELECT db_name()))


GO
